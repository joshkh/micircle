;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name micircle.core, :imports nil, :requires {reagent reagent.core, views micircle.views, micircle.config micircle.config, micircle.views micircle.views, reagent.core reagent.core, config micircle.config, micircle.handlers micircle.handlers, micircle.subs micircle.subs, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {mount-root {:protocol-inline nil, :meta {:file "/home/josh/prod/micircle/src/cljs/micircle/core.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([]))}, :name micircle.core/mount-root, :variadic false, :file "/home/josh/prod/micircle/src/cljs/micircle/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/josh/prod/micircle/src/cljs/micircle/core.cljs", :line 18, :column 16, :end-line 18, :end-column 20, :export true, :arglists (quote ([]))}, :name micircle.core/init, :variadic false, :file "/home/josh/prod/micircle/src/cljs/micircle/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:initialize-db :load-data}, :order [:initialize-db :load-data]}, :doc nil}