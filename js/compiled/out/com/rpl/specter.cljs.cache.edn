{:use-macros {defcollector com.rpl.specter.macros, defpath com.rpl.specter.macros, fixed-pathed-path com.rpl.specter.macros, variable-pathed-path com.rpl.specter.macros, pathed-collector com.rpl.specter.macros}, :excludes #{}, :name com.rpl.specter, :imports nil, :requires {com.rpl.specter.protocols com.rpl.specter.protocols, i com.rpl.specter.impl, com.rpl.specter.impl com.rpl.specter.impl, set clojure.set, clojure.set clojure.set}, :uses {StructurePath com.rpl.specter.protocols}, :defs {compiled-select-one {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 38, :column 7, :end-line 38, :end-column 26, :arglists (quote ([path structure])), :doc "Version of select-one that takes in a path pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-select-one, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 26, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Version of select-one that takes in a path pre-compiled with comp-paths"}, comp-paths {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([& paths])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}}, :name com.rpl.specter/comp-paths, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}, :method-params [(paths)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists ([& paths])}, submap {:name com.rpl.specter/submap, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 220, :column 1, :end-line 224, :end-column 9, :doc "Navigates to the specified submap (using select-keys).\n          In a transform, that submap in the original map is changed to the new\n          value of the submap.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 224, :column 3, :end-line 224, :end-column 9, :doc "Navigates to the specified submap (using select-keys).\n          In a transform, that submap in the original map is changed to the new\n          value of the submap."}}, selected? {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 293, :column 7, :end-line 293, :end-column 16, :arglists (quote ([& path])), :doc "Filters the current value based on whether a path finds anything.\n  e.g. (selected? :vals ALL even?) keeps the current element only if an\n  even number exists for the :vals key.\n\n  The input path may be parameterized, in which case the result of selected?\n  will be parameterized in the order of which the parameterized navigators\n  were declared.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/selected?, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Filters the current value based on whether a path finds anything.\n  e.g. (selected? :vals ALL even?) keeps the current element only if an\n  even number exists for the :vals key.\n\n  The input path may be parameterized, in which case the result of selected?\n  will be parameterized in the order of which the parameterized navigators\n  were declared."}, srange {:name com.rpl.specter/srange, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 189, :column 1, :end-line 192, :end-column 9, :doc "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 192, :column 3, :end-line 192, :end-column 9, :doc "Navigates to the subsequence bound by the indexes start (inclusive)\n          and end (exclusive)"}}, view {:name com.rpl.specter/view, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 279, :column 1, :end-line 279, :end-column 14, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 279, :column 10, :end-line 279, :end-column 14}}, BEGINNING {:name com.rpl.specter/BEGINNING, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 200, :column 1, :end-line 200, :end-column 15, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 200, :column 6, :end-line 200, :end-column 15}}, LAST {:name com.rpl.specter/LAST, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 174, :column 1, :end-line 174, :end-column 10, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 174, :column 6, :end-line 174, :end-column 10}}, stay-then-continue {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 471, :column 7, :end-line 471, :end-column 25, :arglists (quote ([& path])), :doc "Navigates to the current element and then navigates via the provided path.\n   This can be used to implement pre-order traversal.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/stay-then-continue, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 471, :end-line 471, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Navigates to the current element and then navigates via the provided path.\n   This can be used to implement pre-order traversal."}, STOP {:name com.rpl.specter/STOP, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 150, :column 1, :end-line 153, :end-column 7, :doc "Stops navigation at this point. For selection returns nothing and for \n          transformation returns the structure unchanged", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 153, :column 3, :end-line 153, :end-column 7, :doc "Stops navigation at this point. For selection returns nothing and for \n          transformation returns the structure unchanged"}}, select {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 32, :column 7, :end-line 32, :end-column 13, :arglists (quote ([path structure])), :doc "Navigates to and returns a sequence of all the elements specified by the path."}, :name com.rpl.specter/select, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 13, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Navigates to and returns a sequence of all the elements specified by the path."}, NIL->SET {:name com.rpl.specter/NIL->SET, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 394, :column 1, :end-line 394, :end-column 14, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 394, :column 6, :end-line 394, :end-column 14}}, srange-dynamic {:name com.rpl.specter/srange-dynamic, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 178, :column 1, :end-line 181, :end-column 17, :doc "Uses start-fn and end-fn to determine the bounds of the subsequence\n          to select when navigating. Each function takes in the structure as input.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 181, :column 3, :end-line 181, :end-column 17, :doc "Uses start-fn and end-fn to determine the bounds of the subsequence\n          to select when navigating. Each function takes in the structure as input."}}, compiled-setval {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 87, :column 7, :end-line 87, :end-column 22, :arglists (quote ([path val structure])), :doc "Version of setval that takes in a path pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-setval, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 22, :method-params ([path val structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path val structure])), :doc "Version of setval that takes in a path pre-compiled with comp-paths"}, multi-path {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 452, :column 7, :end-line 452, :end-column 17, :arglists (quote ([& paths])), :doc "A path that branches on multiple paths. For updates,\n   applies updates to the paths in order.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}}, :name com.rpl.specter/multi-path, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(paths)], :arglists ([& paths]), :arglists-meta (nil)}, :method-params [(paths)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 0, :fn-var true, :arglists ([& paths]), :doc "A path that branches on multiple paths. For updates,\n   applies updates to the paths in order."}, setval {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 92, :column 7, :end-line 92, :end-column 13, :arglists (quote ([path val structure])), :doc "Navigates to each value specified by the path and replaces it by val"}, :name com.rpl.specter/setval, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 13, :method-params ([path val structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path val structure])), :doc "Navigates to each value specified by the path and replaces it by val"}, nil->val {:name com.rpl.specter/nil->val, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 384, :column 1, :end-line 387, :end-column 11, :doc "Navigates to the provided val if the structure is nil. Otherwise it stays\n          navigated at the structure.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 387, :column 3, :end-line 387, :end-column 11, :doc "Navigates to the provided val if the structure is nil. Otherwise it stays\n          navigated at the structure."}}, putval {:name com.rpl.specter/putval, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 410, :column 1, :end-line 418, :end-column 9, :doc "Adds an external value to the collected vals. Useful when additional arguments\n     are required to the transform function that would otherwise require partial\n     application or a wrapper function.\n\n     e.g., incrementing val at path [:a :b] by 3:\n     (transform [:a :b (putval 3)] + some-map)", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 418, :column 3, :end-line 418, :end-column 9, :doc "Adds an external value to the collected vals. Useful when additional arguments\n     are required to the transform function that would otherwise require partial\n     application or a wrapper function.\n\n     e.g., incrementing val at path [:a :b] by 3:\n     (transform [:a :b (putval 3)] + some-map)"}}, codewalker {:name com.rpl.specter/codewalker, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 243, :column 1, :end-line 244, :end-column 13, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 244, :column 3, :end-line 244, :end-column 13}}, continue-then-stay {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 477, :column 7, :end-line 477, :end-column 25, :arglists (quote ([& path])), :doc "Navigates to the provided path and then to the current element. This can be used\n   to implement post-order traversal.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/continue-then-stay, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 477, :end-line 477, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Navigates to the provided path and then to the current element. This can be used\n   to implement post-order traversal."}, transform {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 81, :column 7, :end-line 81, :end-column 16, :arglists (quote ([path transform-fn structure])), :doc "Navigates to each value specified by the path and replaces it by the result of running\n  the transform-fn on it"}, :name com.rpl.specter/transform, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :method-params ([path transform-fn structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists (quote ([path transform-fn structure])), :doc "Navigates to each value specified by the path and replaces it by the result of running\n  the transform-fn on it"}, select-one {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([path structure])), :doc "Like select, but returns either one element or nil. Throws exception if multiple elements found"}, :name com.rpl.specter/select-one, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Like select, but returns either one element or nil. Throws exception if multiple elements found"}, filterer {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 327, :column 7, :end-line 327, :end-column 15, :arglists (quote ([& path])), :doc "Navigates to a view of the current sequence that only contains elements that\n  match the given path. An element matches the selector path if calling select\n  on that element with the path yields anything other than an empty sequence.\n\n   The input path may be parameterized, in which case the result of filterer\n   will be parameterized in the order of which the parameterized selectors\n   were declared.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/filterer, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Navigates to a view of the current sequence that only contains elements that\n  match the given path. An element matches the selector path if calling select\n  on that element with the path yields anything other than an empty sequence.\n\n   The input path may be parameterized, in which case the result of filterer\n   will be parameterized in the order of which the parameterized selectors\n   were declared."}, subset {:name com.rpl.specter/subset, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 204, :column 1, :end-line 208, :end-column 9, :doc "Navigates to the specified subset (by taking an intersection).\n          In a transform, that subset in the original set is changed to the\n          new value of the subset.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 208, :column 3, :end-line 208, :end-column 9, :doc "Navigates to the specified subset (by taking an intersection).\n          In a transform, that subset in the original set is changed to the\n          new value of the subset."}}, pred {:name com.rpl.specter/pred, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 374, :column 1, :end-line 377, :end-column 7, :doc "Keeps the element only if it matches the supplied predicate. This is the\n          late-bound parameterized version of using a function directly in a path.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 377, :column 3, :end-line 377, :end-column 7, :doc "Keeps the element only if it matches the supplied predicate. This is the\n          late-bound parameterized version of using a function directly in a path."}}, bind-params* {:name com.rpl.specter/bind-params*, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 127, :column 1, :end-line 130, :end-column 15, :doc "Takes a compiled path that needs late-bound params and supplies it with\n             an array of params and a position in the array from which to begin reading\n             params. The return value is an executable selector.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 130, :column 3, :end-line 130, :end-column 15, :doc "Takes a compiled path that needs late-bound params and supplies it with\n             an array of params and a position in the array from which to begin reading\n             params. The return value is an executable selector."}}, compiled-select-one! {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 52, :column 7, :end-line 52, :end-column 27, :arglists (quote ([path structure])), :doc "Version of select-one! that takes in a path pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-select-one!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 27, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Version of select-one! that takes in a path pre-compiled with comp-paths"}, collect-one {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 404, :column 7, :end-line 404, :end-column 18, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/collect-one, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, NIL->LIST {:name com.rpl.specter/NIL->LIST, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 395, :column 1, :end-line 395, :end-column 15, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 395, :column 6, :end-line 395, :end-column 15}}, transformed {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 338, :column 7, :end-line 338, :end-column 18, :arglists (quote ([path update-fn])), :doc "Navigates to a view of the current value by transforming it with the\n   specified path and update-fn.\n\n   The input path may be parameterized, in which case the result of transformed\n   will be parameterized in the order of which the parameterized navigators\n   were declared."}, :name com.rpl.specter/transformed, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 18, :method-params ([path update-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path update-fn])), :doc "Navigates to a view of the current value by transforming it with the\n   specified path and update-fn.\n\n   The input path may be parameterized, in which case the result of transformed\n   will be parameterized in the order of which the parameterized navigators\n   were declared."}, params-reset {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 132, :column 7, :end-line 132, :end-column 19, :arglists (quote ([params-path]))}, :name com.rpl.specter/params-reset, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 19, :method-params ([params-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([params-path]))}, compiled-select {:name com.rpl.specter/compiled-select, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 29, :column 1, :end-line 30, :end-column 18, :doc "Version of select that takes in a path pre-compiled with comp-paths", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 30, :column 3, :end-line 30, :end-column 18, :doc "Version of select that takes in a path pre-compiled with comp-paths"}}, VAL {:name com.rpl.specter/VAL, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 172, :column 1, :end-line 172, :end-column 9, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 172, :column 6, :end-line 172, :end-column 9}}, cond-path {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 423, :column 7, :end-line 423, :end-column 16, :arglists (quote ([& conds])), :doc "Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.\n\n   The input paths may be parameterized, in which case the result of cond-path\n   will be parameterized in the order of which the parameterized navigators\n   were declared.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(conds)], :arglists ([& conds]), :arglists-meta (nil)}}, :name com.rpl.specter/cond-path, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(conds)], :arglists ([& conds]), :arglists-meta (nil)}, :method-params [(conds)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 423, :end-line 423, :max-fixed-arity 0, :fn-var true, :arglists ([& conds]), :doc "Takes in alternating cond-path path cond-path path...\n   Tests the structure if selecting with cond-path returns anything.\n   If so, it uses the following path for this portion of the navigation.\n   Otherwise, it tries the next cond-path. If nothing matches, then the structure\n   is not selected.\n\n   The input paths may be parameterized, in which case the result of cond-path\n   will be parameterized in the order of which the parameterized navigators\n   were declared."}, NIL->VECTOR {:name com.rpl.specter/NIL->VECTOR, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 396, :column 1, :end-line 396, :end-column 17, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 396, :column 6, :end-line 396, :end-column 17}}, compiled-select-first {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 65, :column 7, :end-line 65, :end-column 28, :arglists (quote ([path structure])), :doc "Version of select-first that takes in a path pre-compiled with comp-paths"}, :name com.rpl.specter/compiled-select-first, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 28, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Version of select-first that takes in a path pre-compiled with comp-paths"}, compiled-transform {:name com.rpl.specter/compiled-transform, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 78, :column 1, :end-line 79, :end-column 21, :doc "Version of transform that takes in a path pre-compiled with comp-paths", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 79, :column 3, :end-line 79, :end-column 21, :doc "Version of transform that takes in a path pre-compiled with comp-paths"}}, select-first {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 70, :column 7, :end-line 70, :end-column 19, :arglists (quote ([path structure])), :doc "Returns first element found. Not any more efficient than select, just a convenience"}, :name com.rpl.specter/select-first, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 19, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Returns first element found. Not any more efficient than select, just a convenience"}, not-selected? {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 314, :column 7, :end-line 314, :end-column 20, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/not-selected?, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, STAY {:name com.rpl.specter/STAY, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 161, :column 1, :end-line 163, :end-column 7, :doc "Stays navigated at the current point. Essentially a no-op navigator.", :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 163, :column 3, :end-line 163, :end-column 7, :doc "Stays navigated at the current point. Essentially a no-op navigator."}}, subselect {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 251, :column 7, :end-line 251, :end-column 16, :arglists (quote ([& path])), :doc "Navigates to a sequence that contains the results of (select ...),\n  but is a view to the original structure that can be transformed.\n\n  Requires that the input navigators will walk the structure's\n  children in the same order when executed on \"select\" and then\n  \"transform\".", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/subselect, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 0, :fn-var true, :arglists ([& path]), :doc "Navigates to a sequence that contains the results of (select ...),\n  but is a view to the original structure that can be transformed.\n\n  Requires that the input navigators will walk the structure's\n  children in the same order when executed on \"select\" and then\n  \"transform\"."}, FIRST {:name com.rpl.specter/FIRST, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 176, :column 1, :end-line 176, :end-column 11, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 176, :column 6, :end-line 176, :end-column 11}}, parser {:name com.rpl.specter/parser, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 286, :column 1, :end-line 286, :end-column 16, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 286, :column 10, :end-line 286, :end-column 16}}, collect {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 398, :column 7, :end-line 398, :end-column 14, :arglists (quote ([& path])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}}, :name com.rpl.specter/collect, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(path)], :arglists ([& path]), :arglists-meta (nil)}, :method-params [(path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 398, :end-line 398, :max-fixed-arity 0, :fn-var true, :arglists ([& path])}, END {:name com.rpl.specter/END, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 202, :column 1, :end-line 202, :end-column 9, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 202, :column 6, :end-line 202, :end-column 9}}, replace-in {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 116, :column 7, :end-line 116, :end-column 17, :arglists (quote ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}])), :doc "Similar to transform, except returns a pair of [transformed-structure sequence-of-user-ret].\n  The transform-fn in this case is expected to return [ret user-ret]. ret is\n   what's used to transform the data structure, while user-ret will be added to the user-ret sequence\n   in the final return. replace-in is useful for situations where you need to know the specific values\n   of what was transformed in the data structure.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}}, :name com.rpl.specter/replace-in, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :doc "Similar to transform, except returns a pair of [transformed-structure sequence-of-user-ret].\n  The transform-fn in this case is expected to return [ret user-ret]. ret is\n   what's used to transform the data structure, while user-ret will be added to the user-ret sequence\n   in the final return. replace-in is useful for situations where you need to know the specific values\n   of what was transformed in the data structure."}, keypath {:name com.rpl.specter/keypath, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 272, :column 1, :end-line 272, :end-column 17, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 272, :column 10, :end-line 272, :end-column 17}}, select-one! {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 60, :column 7, :end-line 60, :end-column 18, :arglists (quote ([path structure])), :doc "Returns exactly one element, throws exception if zero or multiple elements found"}, :name com.rpl.specter/select-one!, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 18, :method-params ([path structure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path structure])), :doc "Returns exactly one element, throws exception if zero or multiple elements found"}, compiled-replace-in {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 97, :column 7, :end-line 97, :end-column 26, :arglists (quote ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}])), :doc "Version of replace-in that takes in a path pre-compiled with comp-paths", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}}, :name com.rpl.specter/compiled-replace-in, :variadic true, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :arglists-meta (nil)}, :method-params [(path transform-fn structure {:keys [merge-fn], :or {merge-fn concat}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 3, :fn-var true, :arglists ([path transform-fn structure & {:keys [merge-fn], :or {merge-fn concat}}]), :doc "Version of replace-in that takes in a path pre-compiled with comp-paths"}, walker {:name com.rpl.specter/walker, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 235, :column 1, :end-line 236, :end-column 9, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 236, :column 3, :end-line 236, :end-column 9}}, if-path {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 446, :column 7, :end-line 446, :end-column 14, :arglists (quote ([cond-p if-path] [cond-p if-path else-path])), :doc "Like cond-path, but with if semantics.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([cond-p if-path] [cond-p if-path else-path]), :arglists ([cond-p if-path] [cond-p if-path else-path]), :arglists-meta (nil nil)}}, :name com.rpl.specter/if-path, :variadic false, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([cond-p if-path] [cond-p if-path else-path]), :arglists ([cond-p if-path] [cond-p if-path else-path]), :arglists-meta (nil nil)}, :method-params ([cond-p if-path] [cond-p if-path else-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 446, :end-line 446, :max-fixed-arity 3, :fn-var true, :arglists ([cond-p if-path] [cond-p if-path else-path]), :doc "Like cond-path, but with if semantics."}, ALL {:name com.rpl.specter/ALL, :file "resources/public/js/compiled/out/com/rpl/specter.cljs", :line 170, :column 1, :end-line 170, :end-column 9, :meta {:file "/home/FILESERVER5/micklem/jkh46/projects/micircle/resources/public/js/compiled/out/com/rpl/specter.cljs", :line 170, :column 6, :end-line 170, :end-column 9}}}, :require-macros {com.rpl.specter.macros com.rpl.specter.macros}, :cljs.analyzer/constants {:seen #{:merge-fn}, :order [:merge-fn]}, :doc nil}